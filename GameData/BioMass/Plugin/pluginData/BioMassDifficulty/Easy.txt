DifficultySetting{
	setting = easy
}

//*****************************************************
//*****SUPPLY TANKS*****
@PART[BiomassStationHub1]
{
  @category = Utility
}
@PART[BiomassStationHub2]
{
  @category = Utility
}
@PART[CO2RadialLong]
{
  @category = Utility
  @title = Compressed CO2 Supply Tank, Long
  @manufacturer = Stodola, LLC.
  @description = This tank is designed to hold carbon dioxide, the last of the gasses discovered by the famous chemist Kan Thomas van Kerbin. There has been a great deal of speculation as to whether the CO2 is a liquid or a gas while in this tank. Most researchers believe it exists in both forms until you look, at which point something explodes.
}
@PART[radialCO2Tank]
{
  @rescaleFactor = 0.5
  @category = Utility
  @title =  Compressed CO2 Supply Tank, Round
  @manufacturer = Stodola, LLC.
  @description = This tank is designed to hold carbon dioxide, the last of the gasses discovered by the famous chemist Kan Thomas van Kerbin. Who knows how many other gasses he would have discovered if he hadn't insisted on breathing nothing but this gas for 10 minutes to prove it was safe.
}
@PART[BioMass_SnackContainer]
{
  @category = -1
}
@PART[BioMass_SnackContainer_Long]
{
  @category = -1
}
@PART[BioMass_SnackContainer_Basic]
{
  @category = -1
}
@PART[OTankLong]
{
  @category = Utility
  @title = Oxygen Supply Tank, Long
  @manufacturer = Stodola, LLC.
  @description = This tank is designed to hold oxygen gas. The chemist Kan Thomas van Kerbin reportedly went for walks with his family while breathing nothing but this gas from portable tanks to prove it improved one's vigour.
}
@PART[OTankRound]
{
  @rescaleFactor = 0.5
  @category = Utility
  @title =  Oxygen Supply Tank, Round
  @manufacturer = Stodola, LLC.
  @description = This roundified tank is designed to hold oxygen gas. The chemist Kan Thomas van Kerbin reportedly went for walks with his family while breathing nothing but this gas from portable tanks to prove it improved one's vigour.
}
@PART[BioMass_SeedBank]
{
  @category = -1
}
@PART[H2ORadialLong]
{
  @category = Utility
}


//*****************************************************
//**SCIENCE
//****HIDE THESE FOR NOW. 
//@PART[BioMassAGStudy]
//{
//  @category = Science
//}
//@PART[BioMassGooExp]
//{
//  @category = Science
//}


//*****************************************************
//*****GAS REGULATORS*****
@PART[BioMassRedGasRegulator]
{
  @rescaleFactor = 0.6
  @cost = 3800
  @category = Utility
  @manufacturer = Stodola, LLC.
  @mass = 0.12
  @node_stack_top =    -0.01, 0.7, 0.07, 0.0, 1.0, 0.0, 1
  @node_stack_bottom = -0.01, -0.65, 0.06, 0.0, 1.0, 0.0, 1
  -MODULE[ModuleResourceConverter]:HAS[#tag[makeMonoPropellant]] {}
  MODULE
  {
      name = ModuleResourceConverter
      tag = makeMonoPropellant //for moduleManager
      ConverterName = M-Compressor
      StartActionName = Start Compression
      StopActionName = Stop Compression
      AutoShutdown = false
      GeneratesHeat = false
      UseSpecialistBonus = true
      SpecialistEfficiencyFactor = 0.2
      SpecialistBonusBase = 0.05
      Specialty = Engineer
      EfficiencyBonus = 1
      INPUT_RESOURCE
      {
          ResourceName = ElectricCharge
          Ratio = 10
      }
      INPUT_RESOURCE
      {
          ResourceName = Oxidizer
          Ratio = 0.0020000
          FlowMode = STAGE_PRIORITY_FLOW
      }
      OUTPUT_RESOURCE
      {
          ResourceName = CarbonDioxide
          Ratio = 0.1601743
          DumpExcess = false
          FlowMode = STAGE_PRIORITY_FLOW
      }
      OUTPUT_RESOURCE
      {
          ResourceName = MonoPropellant
          Ratio = 0.0024219
          DumpExcess = false
          FlowMode = STAGE_PRIORITY_FLOW
       }
  }
  //MODULE {
  //  name = BioGen
  //  tag = makeMonoPropellant
  //  bioLabel = M-Compressor
  //  RequiresAllInputs = true
  //  smartGen = true
  //  hasMax = true
  //  bioIn{
  //    ElectricCharge = 10
  //    Oxidizer = 0.0020000
  //  }
  //  bioOut{
  //    CarbonDioxide = 0.1601743
  //    MonoPropellant = 0.0024219
  //  }
  //}
}
@PART[BioMassWhiteGasRegulator]
{
  @category = -1
}
@PART[BioMassGreenGasRegulator]
{
  @category = -1
}
@PART[BioMassGreyGasRegulator]
{
  @category = -1
}


//*****************************************************
//********MISC UTILITIES
//****Cryogenic Gas Seperator
@PART[CryogenicAtmosphericSeperator]
{
  @category = -1
}
//****Koylant Maker
@PART[BioMass_KoylentMaker]
{
  @category = -1

}



//*****************************************************
//*****GREENHOUSES**********
@PART[BioMass_Expanding_Greenhouse]
{
  @category = -1
}


@PART[BioMass_Blue_Greenhouse]
{  
  @TechRequired = advElectrics
  @category = Utility
  @description = Sometimes you just need to stop and smell the flowers. With the Greenhouse module, you don't even need to stop; you can do so while zipping through space! The Ecosphere GreenHouse cultivates photosynthetic and other complex organisms in a self contained environment. When provided with carbon dioxide and sunlight, the organisms are in growth homeostasis, producing Waste as the metabolize.
  //make sure light can't be stored
  MODULE
  {
    name = ModuleGenerator
    isAlwaysActive = true
    INPUT_RESOURCE
    {
      name = Light
      rate = 0.1
    }
  }
  -MODULE[BioGen]:HAS[#tag[Photosynthesis]] {}
  MODULE
  {
    name = BioGen
    tag = Photosynthesis
    bioLabel = Oxygen Production
    AlwaysActive = true
    RequiresAllInputs = true
    hasMax = true
    bioIn
    {
      ElectricCharge = 1.0
      Light = 0.5
      CarbonDioxide = 0.01029066 //L
    }
    bioOut
    {
      Oxygen = 0.01029066 //L
      Waste = 0.00000735 //L
    }
  }
  RESOURCE{
    name = Waste
    amount = 0.0
    maxAmount = 1
  }
}

@PART[BioMass_Red_Greenhouse]
{  
  @TechRequired = advElectrics
  @category = Utility
  //make sure light can't be stored
  MODULE
  {
    name = ModuleGenerator
    isAlwaysActive = true
    INPUT_RESOURCE
    {
      name = Light
      rate = 0.1
    }
  }
  -MODULE[BioGen]:HAS[#tag[Photosynthesis]] {}
  MODULE
  {
    name = BioGen
    tag = Photosynthesis
    bioLabel = Oxygen Production
    AlwaysActive = true
    RequiresAllInputs = true
    hasMax = true
    bioIn
    {
      ElectricCharge = 1.0
      Light = 0.5
      CarbonDioxide = 0.01029066 //L
      Nutrients = 0.00000113 //L
    }
    bioOut
    {
      BioMass = 0.00000372 //L
      Oxygen = 0.01029066 //L
    }
  }
}

@PART[BioMass_Yellow_Greenhouse]
{
  @TechRequired = advElectrics
  @category = Utility
  //make sure light can't be stored
  MODULE
  {
    name = ModuleGenerator
    isAlwaysActive = true
    INPUT_RESOURCE
    {
      name = Light
      rate = 0.1
    }
  }
  -MODULE[BioGen]:HAS[#tag[Photosynthesis]] {}
  MODULE
  {
    name = BioGen
    tag = Photosynthesis
    bioLabel = Oxygen Production
    AlwaysActive = true
    RequiresAllInputs = true
    hasMax = true
    bioIn
    {
      ElectricCharge = 1.0
      Light = 0.5
      CarbonDioxide = 0.01029066 //L
      Nutrients = 0.00000113 //L
    }
    bioOut
    {
      Oxygen = 0.01029066//L
      Food = 0.00005068 //L
    }
  }
}

@PART[BioMassAlgaeGreenhouse]
{
  @category = Utility
  //make sure light can't be stored
  MODULE
  {
    name = ModuleGenerator
    isAlwaysActive = true
    INPUT_RESOURCE
    {
      name = Light
      rate = 0.1
    }
  }
  -MODULE[BioGen]:HAS[#tag[Photosynthesis]] {}
  MODULE
  {
    name = BioGen
    tag = Photosynthesis
    bioLabel = Oxygen Production
    AlwaysActive = true
    RequiresAllInputs = true
    hasMax = true
    bioIn
    {
      ElectricCharge = 1.0
      Light = 0.5
      CarbonDioxide = 0.01029066 //L
      Nutrients = 0.00000113 //L
    }
    bioOut
    {
      BioMass = 0.00000336 //L
      Oxygen = 0.01029066 //L
      Water = 0.00000138 //L
    }
  }
}



//*****************************************************
//*****UTILITIES
//**BioReaction
@PART[BioMassBioReactor]
{
  @category = Utility
  @description = Based on biofuel designs in use at the end of the war, the bioreactor is a space-ready, state-of-the-art hydrothermal liquefaction and catalytic hydrothermal gasification reactor and refinery. It consumes BioMass and produces Liquid/Oxidizer biofuels. The reaction outputs excess Oxidizer that can be used in the compressor module to fill MonoPropellant tanks. 
  MODULE
  {
    name = ModuleSAS    
  }
  -MODULE[BioGen]:HAS[#tag[BioBreakdownOne]] {}
  MODULE{
    name = BioGen
    tag = BioBreakdownOne
    bioLabel = BioMass Reactor
    RequiresAllInputs = true
    bioIn{
      ElectricCharge = 10
      BioMass = 0.0000168
      Water = 0.0000064
    }
    bioOut{
      LiquidFuel = 0.0000024
      Oxidizer = 0.0000018
    }
  }
}

@PART[BioMassMicroBiome]
{
  //@node_stack_top = 0.0, 0, 0.0, 0.0, 1.0, 0
  //@attachRules = 1,0,0,1,0
  @category = Utility
  @description = Regardless of how tidy you are, there's always a little something that you need to store, but you'd rather not. This is doubly true in space when you are dealing with biological waste. Essentially nothing more than a space faring petri-dish, the Micro-Biome provides a suitable environment to cultivate Mystery Gooâ„¢ on a large scale. With in the module, Mystery Goo happily dine on any available waste products to produce Nutrients. One can also add water to the device to generate waste water...if you're into that sort of thing.
  MODULE
  {
    name = ModuleSAS    
  }
  -MODULE[BioGen]:HAS[#tag[WasteBreakdown]] {}
  -MODULE[BioGen]:HAS[#tag[NutrientOutput]] {}
  MODULE
  {
      name = BioGen
      tag = WasteBreakdown
      bioLabel = Waste Breakdown
      RequiresAllInputs = true
      AlwaysActive = true
      hasMax = true
      bioIn{
          ElectricCharge = 0.5
          Waste = 0.0000074
          WasteWater = 0.0000021
      }
      bioOut{
          MicroFlora = 0.0000017
      }
  }
  MODULE
  {
      name = BioGen
      tag = NutrientOutput
      bioLabel = Nutrient Production
      AlwaysActive = false
      RequiresAllInputs = true
      bioIn{
          MicroFlora = 0.0000017
          WasteWater = 0.0000082
      }
      bioOut{
          CarbonDioxide = 0.0025705
          Nutrients = 0.0000011251
          Water = 0.0000021
      }
  }
  MODULE
  {
      name = BioGen
      tag = Watervalve
      bioLabel = Water valve
      RequiresAllInputs = true
      AlwaysActive = false
      hasMax = true
      bioIn{
          Water = 0.0792893
          Waste = 0.1189340
      }
      bioOut{
          WasteWater = 0.1775134
      }
  }
  RESOURCE{
    name = WasteWater
    amount = 0
    maxAmount = 10
  }
}



